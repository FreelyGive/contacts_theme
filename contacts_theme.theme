<?php

/**
 * @file
 * Functions to support theming in the contacts_theme theme.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function contacts_theme_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'page' && drupal_static('contacts_theme_dashboard')) {
    $suggestions[] = $hook . '__contacts_dashboard';
  }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function contacts_theme_preprocess_html(array &$variables) {
  /* Add class to html tag */
  $variables['attributes']['class'][] = 'flex-container';
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 *
 * @todo: Replace with an SVG logo.
 */
function contacts_theme_preprocess_page(array &$variables) {
  $path = drupal_get_path('theme', 'contacts_theme');
  $logo = theme_get_setting('logo.url');
  if ($logo == file_url_transform_relative(file_create_url($path . '/logo.svg'))) {
    $variables['logo'] = file_url_transform_relative(file_create_url($path . '/logo.png'));
  }

  // See if we have a header image.
  $variables['header_image'] = contacts_theme_header_image();
  if ($variables['header_image']) {
    $variables['attributes']['class'][] = 'contacts-with-header-image';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function contacts_theme_preprocess_block(&$variables) {
  // Add classes to specific blocks for styling.
  $classes = [
    'views_exposed_filter_block:contacts_dashboard_indexed-full' => ['highlight'],
    'contacts_back' => ['highlight'],
    'views_block:contacts_dashboard_indexed-simple' => [
      'flex-container',
      'flex-fill',
      'flex-child-container',
      'flex-child-fill',
    ],
    'views_block:contacts_dashboard_indexed-full' => [
      'flex-container',
      'flex-fill',
      'flex-child-container',
      'flex-child-fill',
    ],
    'tabs:contacts_dashboard' => [
      'flex-container',
      'flex-fill',
    ],
  ];
  if (isset($classes[$variables['plugin_id']])) {
    if (!isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = $classes[$variables['plugin_id']];
    }
    else {
      $variables['attributes']['class'] = array_merge($variables['attributes']['class'], $classes[$variables['plugin_id']]);
    }
  }

  if ($variables['plugin_id'] == 'local_actions_block') {
    $keys = [
      'contacts.contact_create_group',
      'contacts.contact_configure_group',
    ];
    foreach ($variables['content'] as $key => &$content) {
      if (in_array($key, $keys)) {
        $content['button']['#value'] = '';
        $content['button']['#attributes']['class'][] = 'button-action-icon';
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for the contacts_dashboard layout.
 */
function contacts_theme_preprocess_contacts_dashboard(array &$variables) {
  $in_dashboard_page = &drupal_static('contacts_theme_dashboard');
  $in_dashboard_page = TRUE;

  foreach (Element::children($variables['content']) as $region) {
    unset($variables['content'][$region]['#prefix']);
    unset($variables['content'][$region]['#suffix']);
  }
}

function contacts_theme_preprocess_contacts_dash_summary(array $variables) {
  contacts_theme_header_image($variables['image']);
}

/**
 * Get/set the header image.
 *
 * @param array|NULL $content
 *   The render array for the header image if setting.
 *
 * @return array|NULL
 *   The render array for the header image or NULL if there is none.
 */
function contacts_theme_header_image(array $content = NULL) {
  $image = &drupal_static('contacts_theme_header_image');
  if ($content) {
    $image = $content;
  }
  return $image;
}
